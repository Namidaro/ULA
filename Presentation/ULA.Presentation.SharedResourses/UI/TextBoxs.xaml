<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:ULA.Presentation.SharedResourses.Controls"
                    xmlns:converters="clr-namespace:ULA.Presentation.SharedResourses.Converters"
                    xmlns:markups="clr-namespace:ULA.Presentation.SharedResourses.Markups">

    <converters:SemicolonStringToBulletinListConverter x:Key="SemicolonStringToBulletinListConverter" />
    <converters:SemicolonStringToArrayLengthConverter x:Key="SemicolonStringToArrayLengthConverter" />
    <converters:EnumStatesToBrushConverter x:Key="EnumStatesToBrushConverter" />
    <converters:EnumStatesToColorConverter x:Key="EnumStatesToColorConverter" />
    <converters:NullVisibilityConverter x:Key="NullVisibilityConverter" />
    <converters:ObjAsIntToString x:Key="ObjAsIntToString" />
    <converters:ObjAsIntToLevelSignalString x:Key="ObjAsIntToLevelSignalString" />
    <converters:ObjectAsBoolToVisibilityConverter x:Key="ObjectAsBoolToVisibilityConverter" />
    <converters:ObjectAsBoolToColorBrushConverter x:Key="ObjectAsBoolToColorBrushConverter" />
    <converters:PlusOneConverter x:Key="PlusOneConverter" />

    <converters:ObjAsInt16ToString x:Key="ObjAsInt16ToString" />
    <converters:ObjAsBoolToStateBrush x:Key="ObjAsBoolToStateBrush" />
    <converters:ObjAsBoolToStateBrushRevert x:Key="ObjAsBoolToStateBrushRevert" />
    <BooleanToVisibilityConverter x:Key="BoolVisibilityConverter" />

    <converters:ObjectAsBoolToVisibilityRevertConverter x:Key="ObjectAsBoolToVisibilityRevertConverter" />

    <SolidColorBrush Color="Red" x:Key="AckSolidColorBrush"></SolidColorBrush>

    <Style x:Key="{x:Type TextBoxBase}"
           BasedOn="{x:Null}"
           TargetType="{x:Type TextBoxBase}">
        <Setter Property="Foreground" Value="{DynamicResource InputText}" />
        <Setter Property="Background" Value="{DynamicResource InputBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource InputBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="2,1,1,1" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="SelectionBrush" Value="{DynamicResource Accent}" />
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel Orientation="Horizontal">
                        <Border VerticalAlignment="Top"
                                BorderBrush="#FFdc000c"
                                BorderThickness="1">
                            <Grid>
                                <AdornedElementPlaceholder x:Name="adorner" Margin="-1" />
                            </Grid>
                        </Border>
                        <Border x:Name="errorBorder"
                                MinHeight="24"
                                Margin="8,0,0,0"
                                Background="#FFdc000c"
                                CornerRadius="0"
                                IsHitTestVisible="False"
                                Opacity="0">
                            <TextBlock Margin="8,2,8,3"
                                       VerticalAlignment="Center"
                                       Foreground="White"
                                       Text="{Binding ElementName=adorner,
                                                      Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"
                                       TextWrapping="Wrap" />
                        </Border>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <DataTrigger Value="True">
                            <DataTrigger.Binding>
                                <Binding ElementName="adorner" Path="AdornedElement.IsKeyboardFocused" />
                            </DataTrigger.Binding>
                            <DataTrigger.EnterActions>
                                <BeginStoryboard x:Name="fadeInStoryboard">
                                    <Storyboard>
                                        <DoubleAnimation Duration="00:00:00.15"
                                                         Storyboard.TargetName="errorBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="fadeInStoryboard" />
                                <BeginStoryboard x:Name="fadeOutStoryBoard">
                                    <Storyboard>
                                        <DoubleAnimation Duration="00:00:00"
                                                         Storyboard.TargetName="errorBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      RenderOptions.ClearTypeHint="Enabled"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource InputTextDisabled}" />
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource InputTextDisabled}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource Accent}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsReadOnly" Value="False" />
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource InputBackgroundHover}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource InputBorderHover}" />
                            <Setter Property="Foreground" Value="{DynamicResource InputTextHover}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>


    <Style x:Key="InformationalIconStyle" TargetType="{x:Type controls:InfoIcon}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:InfoIcon}">
                    <Path 
                      Width="16"
                      Height="16"
                      Margin="4,0,0,0"
                      Cursor="Hand"
                      Fill="{DynamicResource IconBrush}"
                      Style="{DynamicResource InformationIconStyle}">
                        <Path.ToolTip>
                            <StackPanel Orientation="Vertical">
                                <TextBlock Style="{DynamicResource TooltipHeaderStyle}" Text="{TemplateBinding InformationHeader}" />
                                <TextBlock Margin="4"
                                       Style="{DynamicResource TooltipTextContentStyle}"
                                       Text="{TemplateBinding InformationContent}" />
                            </StackPanel>
                        </Path.ToolTip>
                    </Path>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="InformationalTextBoxStyle" TargetType="{x:Type controls:InformationalTextBox}">
        <Setter Property="Foreground" Value="{DynamicResource InputText}" />
        <Setter Property="Background" Value="{DynamicResource InputBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource InputBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="2,1,1,1" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="SelectionBrush" Value="{DynamicResource Accent}" />
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:InformationalTextBox}">
                    <Grid x:Name="Root">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="20" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="Bd"
                                Grid.Column="0"
                                HorizontalAlignment="Stretch"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true">
                            <ScrollViewer x:Name="PART_ContentHost"
                                          RenderOptions.ClearTypeHint="Enabled"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <Path Grid.Column="1"
                              Width="16"
                              Height="16"
                              Margin="4,0,0,0"
                              Cursor="Hand"
                              Fill="{DynamicResource IconBrush}"
                              Style="{DynamicResource InformationIconStyle}">
                            <Path.ToolTip>
                                <StackPanel Orientation="Vertical">
                                    <TextBlock Style="{DynamicResource TooltipHeaderStyle}" Text="{TemplateBinding InformationHeader}" />
                                    <TextBlock Margin="4"
                                               Style="{DynamicResource TooltipTextContentStyle}"
                                               Text="{TemplateBinding InformationContent}" />
                                </StackPanel>
                            </Path.ToolTip>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource InputTextDisabled}" />
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource InputTextDisabled}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource Accent}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsReadOnly" Value="False" />
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource InputBackgroundHover}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource InputBorderHover}" />
                            <Setter Property="Foreground" Value="{DynamicResource InputTextHover}" />
                        </MultiTrigger>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource ErrorBackground}" />
                            <Setter Property="ToolTip">
                                <Setter.Value>
                                    <ToolTip Background="{DynamicResource ErrorBackground}"
                                             BorderThickness="0"
                                             DataContext="{Binding PlacementTarget.(Validation.Errors)[0].ErrorContent,
                                                                   RelativeSource={RelativeSource Self}}"
                                             Foreground="{DynamicResource ErrorForeground}">
                                        <StackPanel Orientation="Vertical">
                                            <TextBlock Style="{DynamicResource ErrorTitle}">
                                                <TextBlock.Text>
                                                    <Binding Converter="{StaticResource SemicolonStringToArrayLengthConverter}" StringFormat="{markups:LocalizationResourcesExtension ValidationTemplate}" />
                                                </TextBlock.Text>
                                            </TextBlock>
                                            <TextBlock Margin="4" Text="{Binding Converter={StaticResource SemicolonStringToBulletinListConverter}}" />
                                        </StackPanel>
                                    </ToolTip>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource {x:Type TextBoxBase}}" TargetType="{x:Type TextBox}" />
    <Style BasedOn="{StaticResource {x:Type TextBoxBase}}" TargetType="{x:Type RichTextBox}" />

    <!--  text-in-datagrid styles  -->
    <Style x:Key="DataGridTextStyle" TargetType="TextBlock">
        <Setter Property="Margin" Value="2,0" />
    </Style>

    <Style x:Key="DataGridEditingTextStyle"
           BasedOn="{StaticResource {x:Type TextBox}}"
           TargetType="TextBox">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
    </Style>


    <Style x:Key="ItemsControlWithErrorsStyle" TargetType="ItemsControl">
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel Orientation="Horizontal">
                        <Border
                            VerticalAlignment="Top"
                            BorderBrush="#FFdc000c"
                            BorderThickness="1">
                            <Grid>
                                <AdornedElementPlaceholder x:Name="adorner" Margin="-1" />
                            </Grid>
                        </Border>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ToolTip Background="#5adc000c" Content="{Binding PlacementTarget.(Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Self}}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers> 
    </Style>
</ResourceDictionary>